# create disk image for each vm type
- name: Check Disk Image exists - {{cluster_type}} - {{vm_type.type}}
  stat: path="{{work_dir}}/cloud_{{cluster_type}}_{{vm_type.type}}_{{vm_type.size}}GB.qcow2"
  register: disk_image
- name: Create backing disk image for each image if not exists
  block:
  - name: Convert cloud image into qcow2 - {{cluster_type}} - {{vm_type.type}}
    shell: qemu-img convert -O qcow2 {{work_dir}}/cloud_{{cluster_type}}_{{vm_type.type}}.img {{work_dir}}/cloud_{{cluster_type}}_{{vm_type.type}}_{{vm_type.size}}GB.qcow2
  - name: Get cloud image info - {{cluster_type}} - {{vm_type.type}}
    shell: qemu-img info {{work_dir}}/cloud_{{cluster_type}}_{{vm_type.type}}_{{vm_type.size}}GB.qcow2 --output json
    register: qcow2_info
  - name: Parse cloud image info - {{cluster_type}} - {{vm_type.type}}
    set_fact: qcow2_json="{{qcow2_info.stdout|from_json}}"
  - name: Get current disk size for cloud image - {{cluster_type}} - {{vm_type.type}}
    debug: msg="current disk size is {{qcow2_json["virtual-size"]}}"
  - name: Calculate additional disk size for cloud image - {{cluster_type}} - {{vm_type.type}}
    shell: echo "{{vm_type.size * 1024 * 1024 * 1024 - qcow2_json['virtual-size']|int}}"
    register: qcow2_resize
  - name: Show additional disk size for cloud image - {{cluster_type}} - {{vm_type.type}}
    debug: msg="additional disk size for {{cluster_type}} - {{vm_type.type}} should be {{qcow2_resize.stdout}}"
  - name: Resize disk for cloud image - {{cluster_type}} - {{vm_type.type}}
    shell: qemu-img resize {{work_dir}}/cloud_{{cluster_type}}_{{vm_type.type}}_{{vm_type.size}}GB.qcow2 +{{qcow2_resize.stdout}}
  when: not disk_image.stat.exists
